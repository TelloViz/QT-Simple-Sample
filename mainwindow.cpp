#include "mainwindow.h"   // Include the header file for the MainWindow class
#include "ui_mainwindow.h" // Include the UI header file generated by Qt's UI designer

// Constructor for MainWindow class
MainWindow::MainWindow(QWidget *parent)
    : QMainWindow(parent)  // Call the base class constructor with optional parent parameter
    , ui(new Ui::MainWindow) // Initialize the ui pointer to manage UI components
    , count(0)  // Initialize the count variable to 0
{
    ui->setupUi(this);  // Set up the UI components as defined in the .ui file

    // Explicitly connect signals and slots
    connect(ui->incrementButton, &QPushButton::clicked, this, &MainWindow::incrementClicked);
    connect(ui->resetButton, &QPushButton::clicked, this, &MainWindow::resetClicked);

    // Display the initial count (0) on the label
    ui->label->setText(QString::number(count));
}

// Destructor for MainWindow class
MainWindow::~MainWindow()
{
    delete ui;  // Clean up and delete the UI pointer to free resources
}

// Slot function called when the increment button is clicked
void MainWindow::incrementClicked()
{
    count++;  // Increment the counter value by 1
    ui->label->setText(QString::number(count));  // Update the label to show the new counter value
}

// Slot function called when the reset button is clicked
void MainWindow::resetClicked()
{
    count = 0;  // Reset the counter value to 0
    ui->label->setText(QString::number(count));  // Update the label to show the reset counter value (0)
}

/*
Description of Each Section:

- Includes (#include "mainwindow.h" and #include "ui_mainwindow.h"):
  - Include the necessary header files for the MainWindow class and the UI components.
    The mainwindow.h file defines the MainWindow class, and ui_mainwindow.h is generated by Qt's UI designer to manage UI elements.

- Constructor (MainWindow::MainWindow(QWidget *parent)):
  - Initializes the MainWindow object, setting up the UI and initializing the counter.
    The ui pointer is used to interact with UI elements, and count is set to 0.

- Destructor (MainWindow::~MainWindow()):
  - Cleans up resources by deleting the ui pointer.
    This prevents memory leaks by ensuring that dynamically allocated UI components are properly freed.

- Slot Function (void MainWindow::incrementClicked()):
  - This function is connected to the increment button's click event.
    It increments the count variable and updates the label to reflect the new counter value.

- Slot Function (void MainWindow::resetClicked()):
  - This function is connected to the reset button's click event.
    It resets the count variable to 0 and updates the label to reflect the reset counter value.

Additional Information:

- UI Management:
  - The ui pointer manages the UI components defined in the .ui file.
    It provides access to widgets such as the label and buttons.

- Signal-Slot Mechanism:
  - Qt's signal-slot mechanism is used to handle user interactions with buttons.
    The incrementClicked() and resetClicked() functions are slots that respond to button clicks.

- String Conversion:
  - QString::number(count) is used to convert the integer count to a QString so it can be displayed on the label.
*/
